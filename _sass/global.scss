@charset "utf-8";

// @font-face
@font-face {
  font-family: 'bebas-neue';
  src: url('/fonts/bebas/bebasneue_bold.eot'); /* IE9 Compat Modes */
  src: url('/fonts/bebas/bebasneue_bold.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
       url('/fonts/bebas/bebasneue_bold.woff2') format('woff2'),
       url('/fonts/bebas/bebasneue_bold.woff') format('woff'),
       url('/fonts/bebas/bebasneue_bold.ttf') format('truetype');
  font-weight: bold;
  font-style: normal;
}

@font-face {
  font-family: 'bebas-neue';
  src: url('/fonts/bebas/bebasneue_regular.eot'); /* IE9 Compat Modes */
  src: url('/fonts/bebas/bebasneue_regular.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
       url('/fonts/bebas/bebasneue_regular.woff2') format('woff2'),
       url('/fonts/bebas/bebasneue_regular.woff') format('woff'),
       url('/fonts/bebas/bebasneue_regular.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

// Colors
$blue:        #005293;
$darkBlue:    darken($blue, 10%);
$brightBlue:  #1687E0;

$gold:        #EDAA0B;
$darkGold:    #D68101;

$white:       #ffffff;
$lightGrey:   #F9FAFB;
$grey:        #848E97;
$darkGrey:    #324351;

// Fonts
$base-font-family: 'Source Sans Pro', sans-serif; // Google
$base-font-size:   16px;
$base-font-weight: 400;
$base-line-height: 1.5;

$headline-font-family: "bebas-neue",sans-serif;

$small-font-size:  $base-font-size * 0.875;

$regular:          400;
$bold:             700;

$spacing-unit:     30px;
$max-width:        1440px;
$nav-height:       160px;

// Breakpoints
$breakpoint-mobile:        600px;
$breakpoint-tablet:        900px;
$breakpoint-desktop:       1040px;

// Mixins
// Use media queries like this:
// @include media-query($breakpoint-tablet) {
//     .wrapper {
//         padding-right: $spacing-unit / 2;
//         padding-left: $spacing-unit / 2;
//     }
// }
@mixin media-query($device) {
    @media screen and (max-width: $device) {
        @content;
    }
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

@mixin border-radius($radius: 3px) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

@mixin burger( $color:$grey,$thickness:2px,$width:25px,$position:relative ) {
  cursor: pointer;
  position: $position;
  span {
	  background: $color;
	  display: block;
	  height: $thickness;
		left: 50%;
    position: absolute;
    top: 50%;
    -webkit-transition: all .2s ease-in-out;
		-moz-transition: all .2s ease-in-out;
		-ms-transition: all .2s ease-in-out;
		transition: all .2s ease-in-out;
		@include transform(translate(-50%,-50%));
		width: $width;
    &:before, &:after {
	    background: $color;
	    content: '';
      height: $thickness;
      position: absolute;
      -webkit-transition: all .2s ease-in-out;
			-moz-transition: all .2s ease-in-out;
			-ms-transition: all .2s ease-in-out;
			transition: all .2s ease-in-out;
      width: $width;
    }
    &:before { top: -8px; }
    &:after { top: 8px; }
  }
	&.active {
	  span {
	    background: transparent;
			&:before {
				@include transform(rotate(45deg) translate(5px, 6px));
			}
			&:after {
				@include transform(rotate(-45deg) translate(5px, -6px));
			}
	  }
	}
}

@mixin transition($transition-property, $transition-time, $method) {
	-webkit-transition: $transition-property $transition-time $method;
	-moz-transition: $transition-property $transition-time $method;
	-ms-transition: $transition-property $transition-time $method;
	-o-transition: $transition-property $transition-time $method;
	transition: $transition-property $transition-time $method;
}

// Browser Prefixes
@mixin transform($transforms) {
	-webkit-transform: $transforms;
	-moz-transform: $transforms;
	-ms-transform: $transforms;
  -o-transform: $transforms;
	transform: $transforms;
}
